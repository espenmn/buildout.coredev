PLIP 10902: New collections
===========================

PLIP ticket: http://dev.plone.org/plone/ticket/10902

Review by Ross Patterson (me@rpatterson.net, zenwryly on irc)

The PLIP was reviewed on Ubuntu 11.04 (Natty) using python 2.7.1
and Google Chrome 14.0.


Review steps
------------

- Ran the plips/plip10902-new-collections.cfg buildout.

- Ran "bin/test -v -s plone.app.contentlisting -s plone.app.collection
  -s plone.app.querystring -s archetypes.querywidget
  --coverage=var/coverage".

- Ran bin/alltests.  TODO

- Created a new Plone site with the plone.app.collection add-on
  included.

- Added several collections using the new UI.

- Examined code.


Notes and observations
----------------------

Items prefixed with "MUST FIX" must, IMO, be addressed before merging.

- MUST FIX: Insufficient docs for plone.app.collection,
  plone.app.querystring, and archetypes.querywidget:

  - The README.txt (and thus long_description) don't provide any
    documentation for either end users or customizers.
  - The setup.py description is *still* empty.

- MUST FIX: archetypes.querywidget/setup.py dependencies are
  incomplete and the other package dependencies may be as well.  For
  example, archetypes.querywidget obviously depends on
  Products.Archetypes.

- MUST FIX: The GenericSetup profiles for archetypes.querywidget and
  plone.app.collection need better titles so that users can know what
  they're looking at when installing add-ons.

- All tests pass with "bin/test -v -s plone.app.contentlisting -s
  plone.app.collection -s plone.app.querystring -s
  archetypes.querywidget --coverage=var/coverage" and coverage looks
  excellent!

   27   100%   archetypes.querywidget.field   (/home/xen/src/plone-coredev.svn/src/archetypes.querywidget/archetypes/querywidget/field.py)
    3   100%   archetypes.querywidget.interfaces   (/home/xen/src/plone-coredev.svn/src/archetypes.querywidget/archetypes/querywidget/interfaces.py)
   40   100%   archetypes.querywidget.tests.base   (/home/xen/src/plone-coredev.svn/src/archetypes.querywidget/archetypes/querywidget/tests/base.py)
   11   100%   archetypes.querywidget.tests.test_integration_doctest   (/home/xen/src/plone-coredev.svn/src/archetypes.querywidget/archetypes/querywidget/tests/test_integration_doctest.py)
   49   100%   archetypes.querywidget.widget   (/home/xen/src/plone-coredev.svn/src/archetypes.querywidget/archetypes/querywidget/widget.py)
   18    50%   plone.app.collection.__init__   (/home/xen/src/plone-coredev.svn/src/plone.app.collection/plone/app/collection/__init__.py)
    1   100%   plone.app.collection.browser.__init__   (/home/xen/src/plone-coredev.svn/src/plone.app.collection/plone/app/collection/browser/__init__.py)
  116   100%   plone.app.collection.collection   (/home/xen/src/plone-coredev.svn/src/plone.app.collection/plone/app/collection/collection.py)
   12   100%   plone.app.collection.integration   (/home/xen/src/plone-coredev.svn/src/plone.app.collection/plone/app/collection/integration.py)
    3   100%   plone.app.collection.interfaces   (/home/xen/src/plone-coredev.svn/src/plone.app.collection/plone/app/collection/interfaces.py)
    1   100%   plone.app.collection.portlets.__init__   (/home/xen/src/plone-coredev.svn/src/plone.app.collection/plone/app/collection/portlets/__init__.py)
  102   100%   plone.app.collection.portlets.collectionportlet   (/home/xen/src/plone-coredev.svn/src/plone.app.collection/plone/app/collection/portlets/collectionportlet.py)
   37   100%   plone.app.collection.tests.base   (/home/xen/src/plone-coredev.svn/src/plone.app.collection/plone/app/collection/tests/base.py)
  199   100%   plone.app.collection.tests.testCollection   (/home/xen/src/plone-coredev.svn/src/plone.app.collection/plone/app/collection/tests/testCollection.py)
   13    23%   plone.app.collection.validators   (/home/xen/src/plone-coredev.svn/src/plone.app.collection/plone/app/collection/validators.py)
   49   100%   plone.app.contentlisting.browser   (/home/xen/src/plone-coredev.svn/src/plone.app.contentlisting/plone/app/contentlisting/browser.py)
  121    74%   plone.app.contentlisting.catalog   (/home/xen/src/plone-coredev.svn/src/plone.app.contentlisting/plone/app/contentlisting/catalog.py)
   73    80%   plone.app.contentlisting.contentlisting   (/home/xen/src/plone-coredev.svn/src/plone.app.contentlisting/plone/app/contentlisting/contentlisting.py)
   14   100%   plone.app.contentlisting.interfaces   (/home/xen/src/plone-coredev.svn/src/plone.app.contentlisting/plone/app/contentlisting/interfaces.py)
   60    95%   plone.app.contentlisting.realobject   (/home/xen/src/plone-coredev.svn/src/plone.app.contentlisting/plone/app/contentlisting/realobject.py)
   36   100%   plone.app.contentlisting.tests.base   (/home/xen/src/plone-coredev.svn/src/plone.app.contentlisting/plone/app/contentlisting/tests/base.py)
   10   100%   plone.app.contentlisting.tests.test_integration_doctest   (/home/xen/src/plone-coredev.svn/src/plone.app.contentlisting/plone/app/contentlisting/tests/test_integration_doctest.py)
  219   100%   plone.app.contentlisting.tests.test_integration_unit   (/home/xen/src/plone-coredev.svn/src/plone.app.contentlisting/plone/app/contentlisting/tests/test_integration_unit.py)
   18   100%   plone.app.querystring.interfaces   (/home/xen/src/plone-coredev.svn/src/plone.app.querystring/plone/app/querystring/interfaces.py)
   55   100%   plone.app.querystring.querybuilder   (/home/xen/src/plone-coredev.svn/src/plone.app.querystring/plone/app/querystring/querybuilder.py)
  111    92%   plone.app.querystring.queryparser   (/home/xen/src/plone-coredev.svn/src/plone.app.querystring/plone/app/querystring/queryparser.py)
   71   100%   plone.app.querystring.registryreader   (/home/xen/src/plone-coredev.svn/src/plone.app.querystring/plone/app/querystring/registryreader.py)
   44   100%   plone.app.querystring.tests.base   (/home/xen/src/plone-coredev.svn/src/plone.app.querystring/plone/app/querystring/tests/base.py)
    4   100%   plone.app.querystring.tests.registry_testdata   (/home/xen/src/plone-coredev.svn/src/plone.app.querystring/plone/app/querystring/tests/registry_testdata.py)
   39   100%   plone.app.querystring.tests.testQueryBuilder   (/home/xen/src/plone-coredev.svn/src/plone.app.querystring/plone/app/querystring/tests/testQueryBuilder.py)
  195    99%   plone.app.querystring.tests.testQueryParser   (/home/xen/src/plone-coredev.svn/src/plone.app.querystring/plone/app/querystring/tests/testQueryParser.py)
   43   100%   plone.app.querystring.tests.testRegistryIntegration   (/home/xen/src/plone-coredev.svn/src/plone.app.querystring/plone/app/querystring/tests/testRegistryIntegration.py)
   93   100%   plone.app.querystring.tests.testRegistryReader   (/home/xen/src/plone-coredev.svn/src/plone.app.querystring/plone/app/querystring/tests/testRegistryReader.py)

- MUST FIX: When I add a Plone site with the p.a.collection profile, I
  see two "Collection" options in the add menu.  IMO adding the
  p.a.collection profile should make the previous collection type
  un-addable but existing old collections should still work.

  But that still leaves two collection types in other parts of the UI,
  the query builder and search forms, for example.  How should we
  address this?

- The results preview could be a little clearer by saying "3
  of 22 results" instead of just "22 results" and showing only 3.

  Update: Contrary to the response, this is still happening.

- I think the "Remove line" link in the criteria editing should have
  something to call it out, probably whatever icon we use in Plone for
  deleting/removing, such as a red X.

  Update: still think this would be better and I don't think an x or a
  minus is really icon proliferation.

- The criteria value dropdowns are styled differently than other
  dropdowns.

  Update: still think this should be addressed.  It's a visual
  difference without any meaning.

- MUST FIX: The date criteria value isn't using a calendar widget nor
  is any description given of how to enter a textual date.

- Since this is meant to be the new canonical Collection
  implementation, shouldn't the Plone default News, Events, and Past
  Events collections use this new implantation when creating new
  sites?

  Update: still think this would be better.

- There's no documentation for the re-usable and extensible bits.  For
  example, the IQueryOperation stuff is pretty cool and could be
  really useful if made accessible.

- Why is a new/separate collection portlet implementation provided in
  plone.app.collection?  Isn't the one in plone.portlet.collection
  already compatible?

  > p.a.collection is a new implementation with different idioms and a
  > different portal_type.

  I think p.portlet.collection should be generalized to be made
  compatible.  The is so little in p.portlet.collection that I don't
  want to implementations running around.

- The javascriptDisabled validator seems distasteful to me, but I
  might not be understanding it.  Why is this necessary and is there
  really no better way?

  Update: Still not addressed.

- I don't see any unit tests for the JS.

  Update: Still not addressed.

- I note that the query builder JS lives in archetypes.querywidget.
  It seems like it would be best to have it factored out into a non-AT
  dependent place.  Would plone.app.querystring be the right place for
  that?

  > Nope, p.a.querystring should just do parsing the abstracted
  > formquery into a catalog query.

  But the JS UI for dynamically assembling a query is not at all AT
  specific.  I still the builder UI JS should be factored out for
  re-use outside AT content, dexterity for example.

Conclusion
----------

This is still really great and slick stuff and I still love it.  :-)

For merge I would want to see the docs, package and GS metadata
fixed.  I would also need the two collection type issues ironed out.
Finally, *some* solution to the date criteria needs to be worked out.

If we can get all that and a few of the other issues worked out, I'll
be +1 for merge.

PLIP 11300: Ship with plone.app.theming 
=======================================

PLIP ticket: https://dev.plone.org/plone/ticket/11880

Review #1 by Alec Mitchell (alecpm@gmail.com, alecm on irc)

The PLIP was reviewed on Mac OS X 10.6.7 using python 2.6.6 and Google
Chrome 12.0.742.100.


Review steps
------------

- Ran buildout with plips/plip11880-plone-app-theming.cfg.

- Reviewed code from repoze.xmliter, plone.subrequest,
  plone.transformchain, plone.resource, diazo and plone.app.theming.

- Read plone.app.theming documentation.

- Ran tests for above packages.

- Started instance and installed plone.app.theming in new site.

- Installed zip file theme from
  (http://plone.org/products/plonetheme.earthlingtwo) and browsed site
  with and without theme.

- Uninstalled plone.app.theme and plone.resource, and ran standard
  buildout to test uninstall profile.

- Re-ran PLIP buildout and installed packages to test settings
  retention.


Notes and observations
----------------------

- The instance expects plips/resources to exist, but the buildout
  config does not create it.  It's probably not necessary to provide
  it at all in this case, though the global resource directory is a
  nice plone.resource feature.

- The code from repoze.xmliter, plone.subrequest,
  plone.transformchain, plone.resource and diazo appears reasonable.

- plome.app.theming documentation is clear and thorough.

- The plone.app.theming code appears reasonable.

- All tests pass.

- Test coverage is mostly excellent.  There are a few exceptions: the
  plone.app.theming.browser.controlpanel module has only 20%
  coverage, and the plone.app.theming.plugins package has essentially no
  coverage.

- The package profile is titled "Diazo Theme Support" and the control
  panel is called 'Diazo Theme'.  This seems like it might be a poor
  usability choice.  These titles should endeavor to be as clear and
  jargon free as possible.

- When a theme is applied, the ZMI will be themed (and generally
  entirely blank) unless special precautions are taken in the theme
  rules to avoid it.  The plone.app.theming documentation provides a
  suggestion that prevents this( <theme
  css:if-content="#visual-portal-wrapper" ...), but it appears that
  some themes already in the wild are not aware of this.  This is
  probably just a matter of providing good best practices
  documentation/boilerplate templates.  Ideally, plone.app.theming
  would never theme the ZMI, however it's probably better to encourage
  good rule file best practices so that things continue to work even
  when switching to alternative Diazo engines.

- The control panel is straightforward and easy to use, the zip file
  theming is a fantastic feature

- The packages uninstall cleanly, leaving no persistent utility
  registrations around to muck things up.

- When the packages are reinstalled, the theme settings are retained,
  even though the persistently stored themes are no longer present.
  This gives a traceback on the console on every page view.  The
  exception is caught and logged by plone.transformchain. This doesn't
  appear to have a significant impact on the site other than some
  noisy log messages and confusing settings in the control panel.


Conclusion
----------

I think this PLIP is ready for merge.

Test coverage could be improved a bit, particularly for the control
panel code and plugin infrastructure.

Though Diazo is a fine name for the technology, I'm not sure 'Diazo
Theme' is the best name for the control panel itself.  Maybe something
like "Theme packages" or 'HTML Themes' or 'Theme add-ons' would be
more intuitive?

Since persistent themes are removed when plone.resource uninstalled,
it would probably be wise to reset/erase the theme control panel
setting on uninstall as well, even to simply avoid confusion and log
pollution.

It will be important to provide high quality documentation of Plone
rule file best practices, as well as something like a cookbook for
common transform usecases.

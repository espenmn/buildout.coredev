PLIP 9472: Include plone.app.registry
=====================================

PLIP ticket: http://dev.plone.org/plone/ticket/9472

Review by Craig Haynal (cah190@psu.edu, cah190 on irc)

The PLIP was reviewed on Mac OS X 10.6.4 using python 2.6.6 and Firefox 3.6.10.


Review steps
------------

- Ran buildout using the plip9472-9473-registry-z3cform.cfg file.

- Ran tests for plone.supermodel, plone.registry, and plone.app.registry.

- Inspected code in plone.supermodel, plone.registry, and plone.app.registry.

- Ran bin/alltests.

- Created and examined a new Plone site to look for any obvious issues.

- Installed plone.app.discussion to get registry values to test UI for
  plone.app.registry.


Notes and observations
----------------------

- The PLIP buildout also includes the implementation for PLIP 9473.

- Is patches.py in plone.supermodel necessary?  The zope.schema used by
  Plone 4.1 already includes the interface definition and applies the
  interfaces.
  
- There are three XXX markers in plone.supermodel that should be addressed
  or removed if they are non-issues.
  
- Code for plone.supermodel looks reasonable.

- The 66 tests in plone.supermodel cover most of the code and reasonably
  test functionality of the package.
  
- There is a XXX marker in plone.registry that should be addressed or
  removed before merging.

- Code for plone.registry looks reasonable.

- The 105 tests in plone.registry cover most of the code and test the bulk
  of the functionality of the package.

- Is there a ZMI-level way to edit the registry?  I do worry about products
  (or even Plone) having settings that could make it impossible to render
  the Plone-level UI.  It seems like there should be some way to edit the
  registry in the ZMI, perhaps via the portal_registry tool.  Otherwise we
  should consider not allowing settings that could potentially break Plone
  to be stored in the registry.

- The 39 tests cover most of the code, though the editor does not appear to
  be tested at this time.
  
- Code for plone.app.registry looks reasonable.

- The plone.app.registry Plone control panel works well when tested with
  plone.app.discussion's settings.


Conclusion
----------

Overall the implementation looks good, aside from the minor issues mentioned
above.  While I would like to see some failsafe ZMI-level editor, I would
still vote in favor of including this PLIP without it, since it does not
attempt to migrate any dangerous settings to the registry.  If the XXX
markers are addressed and patches.py reexamined, then I am +1 for merging.

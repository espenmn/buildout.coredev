PLIP 11065: Improved search results
===========================

PLIP ticket: http://dev.plone.org/plone/ticket/11065

Review by Ross Patterson (me@rpatterson.net, zenwryly on irc)

The PLIP was reviewed on Ubuntu 10.10 (Maverick) using python 2.6.6
and Google Chrome 9.0.


Review steps
------------

- Ran the plips/plip11065-plone.app.caching.cfg buildout.

- Ran "bin/test -s plone.app.caching -s plone.caching".

- Created a new Plone site with the "HTTP Caching" add-on.

- Used the caching control panel to enable caching and import a
  caching profile.

- Examined code.


Notes and observations
----------------------

- Test failures:

    File "/usr/local/lib/python/site-packages/zope.testing-3.9.4-py2.6.egg/zope/testing/testrunner/runner.py", line 367, in run_layer
      setup_layer(options, layer, setup_layers)
    File "/usr/local/lib/python/site-packages/zope.testing-3.9.4-py2.6.egg/zope/testing/testrunner/runner.py", line 627, in setup_layer
      setup_layer(options, base, setup_layers)
    File "/usr/local/lib/python/site-packages/zope.testing-3.9.4-py2.6.egg/zope/testing/testrunner/runner.py", line 627, in setup_layer
      setup_layer(options, base, setup_layers)
    File "/usr/local/lib/python/site-packages/zope.testing-3.9.4-py2.6.egg/zope/testing/testrunner/runner.py", line 632, in setup_layer
      layer.setUp()
    File "/home/xen/src/plone-coredev.svn/src/plone.app.testing/plone/app/testing/layers.py", line 110, in setUp
      self.setUpZCML()
    File "/home/xen/src/plone-coredev.svn/src/plone.app.testing/plone/app/testing/layers.py", line 222, in setUpZCML
      loadAll('configure.zcml')
    File "/home/xen/src/plone-coredev.svn/src/plone.app.testing/plone/app/testing/layers.py", line 217, in loadAll
      xmlconfig.file(filename, package, context=context)
    File "/usr/local/lib/python/site-packages/zope.configuration-3.7.2-py2.6.egg/zope/configuration/xmlconfig.py", line 653, in file
      context.execute_actions()
    File "/usr/local/lib/python/site-packages/zope.configuration-3.7.2-py2.6.egg/zope/configuration/config.py", line 606, in execute_actions
      callable(*args, **kw)
    File "/usr/local/lib/python/site-packages/Products.GenericSetup-1.6.1-py2.6.egg/Products/GenericSetup/registry.py", line 707, in registerProfile
      raise KeyError, 'Duplicate profile ID: %s' % profile_id
  ConfigurationExecutionError: <type 'exceptions.KeyError'>: u'Duplicate profile ID: Products.CMFUid:default'
    in:
    File "/usr/local/lib/python/site-packages/Products.CMFUid-2.2.1-py2.6.egg/Products/CMFUid/configure.zcml", line 10.2-16.8
      <genericsetup:registerProfile
          name="default"
          title="CMFUid"
          description="Adds UID support."
          provides="Products.GenericSetup.interfaces.EXTENSION"
          for="Products.CMFCore.interfaces.ISiteRoot"
          />
  
  Failure in test test_FSObjectLastModified_FSFile (plone.app.caching.tests.test_lastmodified.TestLastModified)
  Traceback (most recent call last):
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 340, in run
      testMethod()
    File "/home/xen/src/plone-coredev.svn/src/plone.app.caching/plone/app/caching/tests/test_lastmodified.py", line 107, in test_FSObjectLastModified_FSFile
      self.assertEquals(mod, ILastModified(dummy)())
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 521, in assertEqual
      assertion_func(first, second, msg=msg)
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 514, in _baseAssertEqual
      raise self.failureException(msg)
  AssertionError: datetime.datetime(2010, 12, 7, 10, 0, 12, 86462, tzinfo=tzlocal()) != datetime.datetime(2010, 12, 7, 10, 0, 12, tzinfo=tzlocal())
  
  Failure in test test_FSObjectLastModified_FSImage (plone.app.caching.tests.test_lastmodified.TestLastModified)
  Traceback (most recent call last):
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 340, in run
      testMethod()
    File "/home/xen/src/plone-coredev.svn/src/plone.app.caching/plone/app/caching/tests/test_lastmodified.py", line 117, in test_FSObjectLastModified_FSImage
      self.assertEquals(mod, ILastModified(dummy)())
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 521, in assertEqual
      assertion_func(first, second, msg=msg)
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 514, in _baseAssertEqual
      raise self.failureException(msg)
  AssertionError: datetime.datetime(2010, 12, 7, 10, 0, 12, 86462, tzinfo=tzlocal()) != datetime.datetime(2010, 12, 7, 10, 0, 12, tzinfo=tzlocal())
  
  Failure in test test_storeResponseInRAMCache_custom_keys (plone.app.caching.tests.test_operation_utils.RAMCacheTest)
  Traceback (most recent call last):
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 340, in run
      testMethod()
    File "/home/xen/src/plone-coredev.svn/src/plone.app.caching/plone/app/caching/tests/test_operation_utils.py", line 1338, in test_storeResponseInRAMCache_custom_keys
      self.assertEquals((200, {'status': '200 OK', 'x-foo': 'bar'}, u'Body', 0), cache['foo'])
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 521, in assertEqual
      assertion_func(first, second, msg=msg)
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 763, in assertTupleEqual
      self.assertSequenceEqual(tuple1, tuple2, msg, seq_type=tuple)
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 734, in assertSequenceEqual
      self.fail(msg)
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 415, in fail
      raise self.failureException(msg)
  AssertionError: Tuples differ: (200, {'status': '200 OK', 'x-... != (200, {'x-foo': 'bar'}, u'Body...
  
  First differing element 1:
  {'status': '200 OK', 'x-foo': 'bar'}
  {'x-foo': 'bar'}
  
  - (200, {'status': '200 OK', 'x-foo': 'bar'}, u'Body', 0)
  ?        --------------------
  
  + (200, {'x-foo': 'bar'}, u'Body', 0)
  
  Failure in test test_storeResponseInRAMCache_gzip (plone.app.caching.tests.test_operation_utils.RAMCacheTest)
  Traceback (most recent call last):
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 340, in run
      testMethod()
    File "/home/xen/src/plone-coredev.svn/src/plone.app.caching/plone/app/caching/tests/test_operation_utils.py", line 1307, in test_storeResponseInRAMCache_gzip
      self.assertEquals((200, {'status': '200 OK', 'x-foo': 'bar'}, u'Body', 1), cache['foo'])
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 521, in assertEqual
      assertion_func(first, second, msg=msg)
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 763, in assertTupleEqual
      self.assertSequenceEqual(tuple1, tuple2, msg, seq_type=tuple)
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 734, in assertSequenceEqual
      self.fail(msg)
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 415, in fail
      raise self.failureException(msg)
  AssertionError: Tuples differ: (200, {'status': '200 OK', 'x-... != (200, {'x-foo': 'bar'}, u'Body...
  
  First differing element 1:
  {'status': '200 OK', 'x-foo': 'bar'}
  {'x-foo': 'bar'}
  
  - (200, {'status': '200 OK', 'x-foo': 'bar'}, u'Body', 1)
  ?        --------------------
  
  + (200, {'x-foo': 'bar'}, u'Body', 1)
  
  Failure in test test_storeResponseInRAMCache_normal (plone.app.caching.tests.test_operation_utils.RAMCacheTest)
  Traceback (most recent call last):
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 340, in run
      testMethod()
    File "/home/xen/src/plone-coredev.svn/src/plone.app.caching/plone/app/caching/tests/test_operation_utils.py", line 1273, in test_storeResponseInRAMCache_normal
      self.assertEquals((200, {'status': '200 OK', 'x-foo': 'bar'}, u'Body', 0), cache['foo'])
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 521, in assertEqual
      assertion_func(first, second, msg=msg)
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 763, in assertTupleEqual
      self.assertSequenceEqual(tuple1, tuple2, msg, seq_type=tuple)
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 734, in assertSequenceEqual
      self.fail(msg)
    File "/usr/local/lib/python/site-packages/unittest2-0.5.1-py2.6.egg/unittest2/case.py", line 415, in fail
      raise self.failureException(msg)
  AssertionError: Tuples differ: (200, {'status': '200 OK', 'x-... != (200, {'x-foo': 'bar'}, u'Body...
  
  First differing element 1:
  {'status': '200 OK', 'x-foo': 'bar'}
  {'x-foo': 'bar'}
  
  - (200, {'status': '200 OK', 'x-foo': 'bar'}, u'Body', 0)
  ?        --------------------
  
  + (200, {'x-foo': 'bar'}, u'Body', 0)

- Test coverage in plone.caching is good but could be better for plone.app.caching.

- The plone.caching/README.txt documentation looks great as do the
  docstrings and comments.

- All the code in plone.caching looks great.

- The docs refer to a good-py KGS.  Should these docs should be
  updated once it's a part of the Plone KGS?

- Do the items in plone.app.caching/TODO.txt still need to be done?
  If so, what's the timeline.

- Actually enabling caching takes 3 steps, activating the add-on,
  checking "enable caching" then saving, and finally importing a
  caching profile.  This seems excessive and confusing, especially
  since the need to import a profile isn't obvious from the control
  panel.  More below in conclusions.

Conclusion
----------

Both plone.caching and plone.app.caching are exemplary packages.  The
code is clean, elegant and very well documented.  The packages work
exactly as they should.  If the test failures are fixed I'm a very
strong +1 for merging.

In discussion with the FWT, we have some suggestions regarding the
installation/activation/enabling story.  If an admin activates the
add-on, that seems a pretty clear indication that they want caching,
so maybe "enable caching" should be on by default.  Also, though it's
covered in the documentation, it's not very clear from the control
panel UI that one needs to do more than just check "enable caching" to
get caching.  So it would be good to have something on that view that
points the user to the "import settings" tab.  Another suggestion that
would be great to see would be to display a portal status message when
"enable caching" is checked but no caching profile has been imported,
like we do with the mail host settings.  These two changes may reduce
some confusion for new users.

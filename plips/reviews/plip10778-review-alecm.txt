PLIP 10778: Standalone UUID implementation
==========================================

PLIP ticket: https://dev.plone.org/plone/ticket/10778

Review #3 by Alec Mitchell (alecpm@gmail.com, alecm on irc)

The PLIP was reviewed on Mac OS X 10.5.8 using python 2.6.5 and Google
Chrome 6.0.472.62.


Review steps
------------

- Ran buildout using the plip9938-output-filters.cfg file.

- Ran tests for plone.uuid and plone.app.uuid.

- Ran bin/alltests to check for additional failures in the Plone stack
  caused by PLIP changes.

- Reviewed the code in plone.uuid and plone.app.uuid.

- Reviewed changes in Archetypes and TinyMCE packages.

- Checked uuid assignment and indexing through the web in the ZMI and
  through the web accessible API.

- Checked uuid behavior on copy, move and delete.

- Ran custom buildout config with
  plips/plip9938-output-filters.cfg and experimental/dexterity.cfg
  with DexterityContent set to implement IAttributeUUID.

- Installed Dexterity in Plone site in order to test content type
  independence of plone.app.uuid through the Plone interface.


Notes and observations
----------------------

- All plone.uuid and plone.app.uuid tests pass.

- There is a failure in archetypes.referencebrowserwidget which
  appears to be caused by some change in the PLIP #9938 buildout.

- The plone.uuid code is straightforward and well tested.  It seems
  slightly problematic that the result of an adaptation to the IUUID
  interface does not result in an object implementing the IUUID
  interface, but this is not a major concern.

- It is not clear to me what the purpose of the IUUIDAware interface
  is. Why aren't IUUID and IAttributeUUID be sufficient?

- The plone.app.uuid code is straightforward and well tested.  I would
  prefer if the utility functions defined in plone.app.uuid.utils
  followed PEP8 naming conventions.

- There is a test in plone.app.uuid for a browser view defined in
  plone.uuid, this is unconventional.

- The changes made in the Product.Archetypes plip10778-plone.uuid branch are
  straightforward and reasonable.  The code now uses IUUID(obj) in
  preference to obj.UID(), however some tests still use obj.UID()
  which could lead to confusion.  This is a minor point as the APIs
  are synonyms and the UID method is not deprecated, but it's use
  should be discouraged for any packages which intend to be content
  agnostic.

- It would be nice to see the manage_afterAdd and manage_afterCopy
  methods in AT's Referenceable class go away in favor of an event
  based system for managing uuids.  This would bring the AT IUUID
  implementation a little closer to the default one.

- plone.app.uuid includes a default profile with a catalog.xml that
  creates the 'uuid' index and metadata.  However, this profile is not
  registered.  As a result, newly created sites do not have these
  indexes.  If it is no longer required, this profile should be
  removed.

- I would like to see some tests in plone.app.uuid to demonstrate that
  it works with (dummy) non-AT content.

- Through the web testing with AT content indicates that the UID/IUUID
  changes are working as expected.

- Through the web testing with uuid-enabled dexterity content
  indicates that uuids are properly handled on Add/Copy/Move and
  indexed in the UID index as expected.

- The PLIP itself could use some updates, since some of the goals and
  deliverables have changed.  It should not be necessary to read
  through the comments on the PLIP to understand those changes.

Conclusion
----------

The implementation is straightforward and the new API is clear and
well tested.  Other than the test failure in
archetypes.referencebrowser, the only concerns I have are cosmetic.  I
consider this PLIP ready for merge.

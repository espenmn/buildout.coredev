PLIP 10901: Set and enforce base coding standards for our own JavaScript
========================================================================

PLIP ticket: https://dev.plone.org/plone/ticket/10901

Review #1 by Rob Gietema (rob@fourdigits.nl, Rob|4D on irc)

The PLIP was reviewed on Mac OS X 10.6.5 using python 2.6.6 and Firefox 3.6.13.


Review steps
------------

- Run buildout using the plip10901-javascript-standards.cfg file.

- Run tests for Plone.

- Review js-standards.js

- Run all the js files in ecmascript through jslint

- Visual review of the code in the js files

- Start instance, create site, browser/edit content


Notes and observations
----------------------

- 2 tests fail in the Plone package but these don't seem related to the changes
  made for this plip.

- Checked all the options which are enabled by default. Differences with the
  settings I'm using for Deco are:
  - strict: I have this enabled but this isn't needed for Plone
  - white: I have this enabled and personally like to have strict whitespace
    but I can imagine it is a lot of work to fix this. If this can be done
    easily then please do, if it can't then we might handle this with a next
    4.x release.
  - maxlen: I have this set to 80 to prevent long lines. This is the same as
    the previous issue; nice to have but not strictly needed
  - maxerr: I set this to a high number (9999) so you get all the errors when
    debugging and not just 50, this can be added.

- I ran all the js files in the ecmascript folder through jslint and the
  following didn't pass, this needs to be fixed:
  - form_tabbing.js
  - fromsubmithelpers.js
  - table_sorter.js
  - testBeforeUnload.js
  - testNodeutilities.js
  - toc.js
  - unittestUtilities.js
  - unlockOnFormUnload.js

- Editing and browsing content works as expected.


Conclusion
----------

Looking very good, if the tests will be fixed I'm +1 for merging. The "nice to
have" features can also be implemented if there is extra time.

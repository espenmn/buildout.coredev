PLIP 9324: collective.amberjack
===============================

PLIP ticket: https://dev.plone.org/plone/ticket/9324

Review #1 by Alec Mitchell (alecpm@gmail.com, alecm on irc)

The PLIP was reviewed on Mac OS X 10.6.5 using python 2.6.6 and Google
Chrome 8.0.552.210.


Review steps
------------

- Ran buildout using the plip9324-collective.amberjack.cfg file.

- Corrected issue with dependency loading in configure.zcml (depends on
  permissions from Products.CMFCore, but does may be loaded before
  that product).

- Ran tests in collective.amberjack.core, collective.amberjack.portlet and
  collective.amberjack.plonetour.

- Visual review of python code in the three collective.amberjack packages.

- Started instance, created site with amberjack and amberjack tour
  launcher products installed.

- Ran tours in standalone mode as admin user.

- Added new user, granted contributor/editor/reviewer roles on member
  folder (per instructions).

- Ran sandboxed tours.


Notes and observations
----------------------

- The instance initially failed to start due to a zcml dependency
  ordering issue (adding "<include package="Products.CMFCore" />" to
  configure.zcml fixes this).

- There's an import failure in
  collective.amberjack.core.tests.test_doctests.  Beyond this, all
  tests pass, coverage in collective.amberjack.core is 68%

- The code in collective.amberjack.core looks fairly reasonable, if
  complex.  There's some javascript being generated by a custom python
  browser view class, which seems a little strange, but it works well enough.

- Collective.amberjack.core appears to provide its own custom skin
  mechanism which allows a custom skin for the tutorials.  This seems
  like over-configurability and is likely to lead to documentation
  difficulties and user confusion.  Additionally, some of the
  available skins are not very attractive.

- There's a bare try/except in utils.py, which looks very questionable.

- It might be nice if collective.amberjack used plone.registry instead
  of a custom settings tool.

- The through the web tour registrations appear to be persistent
  utilities, and there doesn't appear to be any attempt made to remove
  them on uninstall.  This could potentially break sites if the
  package were removed after tours had been registered in the control panel.

- It's fantastic that new tutorials can be installed either in an
  add-on (using a simple zcml declaration) or through the plone
  interface from an archive file or even a url.

- Some of the tutorials need some work.  There are a few obvious
  copy/paste issues in some step descriptions as well as a few awkward
  phrases and some odd ordering of steps vs descriptions.  We need to
  make sure the documentation team goes through these and gets them
  into shape prior to release.

- It's nice to see that tutorials can essentially be made to depend on
  each other by requiring certain content to exist, etc.  This allows
  one to provide a comprehensive walk-trough.  It might be nice if the
  tutorial depencies were explicit rather than implicit though.

- The ability to have sandboxed tutorials is great, and they seem to
  work well.  However, it's annoying that the existing tutorials
  require special privileges in the user sandbox.  There should be
  some default tutorials that work well for new users in their
  sandboxes.

- On a similar note, it would be nice if there were some role-specific
  tutorials.  The current set of tutorials, which require the
  Contributor, Editor, and Reviewer roles, are nice as a functionality
  demonstration for people evaluating Plone, but perhaps not ideal for
  training real-world users.

- The config file syntax for tutorials is pretty straightforward, and
  the initial set of tutorials in collective.amberjack.plonetour
  appear to be a good start for demonstrating basic Plone functionality.

- There are three commented out test suites in
  collective.amberjack.portlet.  Is there a reason for these tests not
  to be run?  It appears the renderer tests are out of date and fail
  as a result. Those should be fixed, not commented out.  The others
  seem to be fine.  With those suites commented out, coverage is only
  around 50%.  Coverage improves quite a bit when the commented suites
  are included.

- Is there a reason why the portlet lives in its own package?  It
  seems pretty insignificant on its own and could easily live in a
  "portlet" package in the core package.

- Similarly, It's not clear that the present two-level
  collective.amberjack.* namespace is necessary or wise.

- It would be nice if there were some ability to group tours together
  in some way to simplify selecting related/dependent tours in the portlet.

- Tour translations seem to work well.


Conclusion
----------

This looks like a great addition to Plone, which could greatly improve
initial user experiences, as well as allow administrators to develop
custom sandboxed tutorials based on their workflows.  Unfortunately, I
don't think the current tutorials quite achieve that goal.  As it
stands, they provide a nice tool to allow someone to quickly evaluate
basic Plone functionality, which may be worthwhile in and of itself.

From a technical standpoint, the zcml dependency issue needs to be
resolved.  I'd also like to see the custom skin mechanism go away or
at least be disabled by default.  Additionally, the package should
either provide an uninstall profile that removes all persistent
utility registrations or switch to plone.registry for storing settings
and tour registrations.  I'd also like to see the test suites improved
a bit (i.e. errors fixed, better coverage).  The current tutorials are
a nice start for a Plone demo, but could use some review by the
documentation team.

PLIP 9288: Improved Commenting Infrastructure
=============================================

PLIP ticket: http://dev.plone.org/plone/ticket/9288

Implementation review by Craig Haynal (cah190@psu.edu, cah190 on irc)

Tje PLIP was reviewed on Mac OS X 10.6.5 using python 2.6.6 and Camino
2.0.6.


Review steps
------------

- Ran plip9288-improved-commenting-infrastructure.cfg buildout.

- Ran tests for plone.app.discussion and plone.app.vocabularies.

- Ran alltests.

- Tested functionality through the web.

- Inspected code.


Notes and observations
----------------------

- The plone.app.discussion egg depends on a uuid egg that does not
appear to be used directly anywhere.

- The plone.app.discussion egg also depends on
collective.autopermission; is this necessary?

- I received one error running plone.app.discussion tests: importing a
Duplicate profile ID for Products.CMFUid:default.  I am not sure this is
plone.app.discussion's fault, but may need to be looked at if we decide
to merge.  Otherwise all plone.app.discussion tests pass and have
reasonable coverage.

- plone.app.vocabularies tests pass.

- alltests results are consistent with the base Plone 4.1 trunk results.

- Installing plone.app.discusion results in a deprecation warning "An
icon for the 'controlpanel/discussion' action is being added to the
action icons tool. The action icons tool has been deprecated and will be
removed in Plone 5. You should register action icons directly on the
action now, using the 'icon_expr' setting."

- Replying to comments appears to be impossible when JavaScript is
disabled.  Only new top-level comments can be left.

- Users who are only Authenticated (i.e. not having the Member role)
cannot leave comments, even if they log in using the "log in to leave
comments" button.

- Deleting a comment also deletes all replies.  I expected a placeholder
or empty space with the replies being preserved.  Perhaps we need a way
to blank out a comment that preserves replies?

- Allowing anonymous comments is only available as a global toggle for a
site.  I can see people wanting to enable it per type or even per object
as the commenting functionality is controlled.

- Good use of plone.app.registry for storing settings.

- Changing workflow on the comments to enable moderation is a bit
strange.  It seems like the configlet should be able to do this.

- The "Globally enable comments" setting in the configlet is somewhat
confusing.  Perhaps it would make sense to reverse the checkbox and make
it a global killswitch instead?  Or even just get rid of the global
toggle entirely.

- The moderation seems reasonable, though it's strange to allow Managers
to reply to unmoderated comments, which can then be deleted, taking out
the replies in the process.

- There should be a way to whitelist users/roles/groups so their
comments do not require approval.  Only requiring moderation for
anonymous comments is a typical workflow.

- The viewlet for the commenting UI does not appear in
@@manage-viewlets, which is unexpected.

- Why is the Moderate Comments user action always visible, even when
moderation is disabled?

- catalog.py has a Todo item in the effective method.

- conversation.py has an XXX item about removing child comments that
should be addressed.

- browser/comments.py has an XXX comment that should probably be a BBB
comment instead.

- Overall, the code is high quality and well-documented.

- The tests for plone.app.discussion look good.


Conclusion
----------

While this PLIP represents a tremendous improvement over Plone's current
commenting system, I have some reservations about the functionality and
behavior.

I do not like seeing the "Moderate Comments" so highly visible in the
user actions when moderation is disabled by default and requires
changing workflows to enable.  It seems like the configlet should be
able to change moderation settings, perhaps by having a three-state
control that allows moderation to be disabled, enabled with standard
workflow, or enabled with custom workflow.  When disabling or enabling
with standard workflow the configlet should change the workflow for
comments automatically.  The enabled options should make the moderation
action visible.  And the enabled with custom workflow options should
probably activate some helpful text in the configlet suggesting the
workflow be set manually.

While there a lot of excellent code in the implementation, the UI and
functionality of the PLIP need enough improvement that I am -1 for
merging.

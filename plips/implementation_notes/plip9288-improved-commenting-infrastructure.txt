=============================================
PLIP 9288: Improved commenting infrastructure
=============================================

This plip is ready for review.

Plip ticket: https://dev.plone.org/plone/ticket/9288

Known Issues
------------

 - Comment items acquire UID.
   
   https://dev.plone.org/plone/ticket/10652
   
   There is a branch that requires plone.uuid that fixes the issue:
   
   http://svn.plone.org/svn/plone/plone.app.discussion/branches/tisto-plone-uuid/
   
   
 - Delete comment requires 'Manage portal' permission.
   
   https://dev.plone.org/plone/ticket/11145
   
   
 - Bulk moderation actions don't work (fixed).
 
   https://dev.plone.org/plone/ticket/11156 
   
   Bug is already fixed and can be closed. A trac bug prevents closing it.
 

Summary of changes / Features
-----------------------------

As described in PLIP 9288, a new commenting system was
implemented with the following features:

 - Basic commenting functionality: Users can post comments or reply to existing 
   comments. Same functionality as the old/current commenting system (e.g. 
   post/reply to comment, allow comments on content types, on single content 
   objects, and on folders). The UI slightly changed because the new comments
   do not have a title field anymore. Titles on comments doesn't make sense.

 - Moderation: It is possible to enable moderation, so that every comment has 
   to be reviewed before publishing. To enable moderation, go to the types 
   control panel, choose "Comment" content type and set workflow to 
   "Comment Review Workflow".

 - Mass editing screen/batch moderation: Like in Wordpress, there is a 
   moderation view ("moderate comments" in site-actions or 
   your-site/@@moderate-comments) for batch editing comments.

 - Captcha support: Four different captcha implementations can be used with
   plone.app.discussion:
   
   - plone.formwidget.captcha (for Captcha spam protection)
   - plone.formwidget.recaptcha (for ReCaptcha spam protection)
   - collective.akismet (for Akismet spam protection)
   - collective.z3cform.norobots (provides a "human" captcha widget based on a 
     list of questions/answers)

   If one or more of these plugins are installed, anonymous comments can be spam
   protected. To enable a captcha solution, go to the discussion control panel, 
   allow "Anonymous comments" and choose a captcha solution from the drop-down
   list.

 - Configurable and extensible comment forms: Using z3c.form for the commenting 
   forms allows for components to extend the comment form with additional fields
   or to hide/reorder existing fields. The CaptchaExtender 
   (see browser/captcha.py) is an example of a very simple form extension.

 - EMail notification: plone.app.discussion allows users and administrators to 
   be notified about new comments by email. There are two kinds of email 
   notification:

   1. User notification: Tell users when a comment has been added.
      This method composes and sends emails to all users that have added a 
      comment to this conversation and enabled user notification.
      
      This requires the user_notification setting to be enabled in the 
      discussion control panel.

      The user notification feature requires z3c.form >= 2.3.3 and is commented
      out in the code right now. If Plone 4.1 will use z3c.form >= 2.3.3 we can
      enable this feature.
            
   2. Moderator notification: Tell the moderator when a comment needs attention.
      This method sends an email to the site admin (mail control panel setting) 
      if comment moderation is enabled and a new comment has been added that 
      needs to be approved.

      This requires the moderator_notification to be enabled in the discussion 
      control panel and the comment_review_workflow enabled for the comment 
      content type.
      
 - plain and intelligenttext comments: Go to the plone.app.discussion control
   panel and choose "plain text" or "intelligenttext" from the "Comment text 
   transform" drop-down list.
 
 - Migration: It is possible to migrate the old comment system
   to the new one. Go to "your-site/@@comment-migration" to
   migrate comments.


Dependencies
------------

- plone.registry/plone.app.registry

- z3c.form/plone.z3cform/plone.app.z3cform

- plone.uuid/plone.app.uuid

- plone.testing/plone.app.testing


Tests and code checkers
-----------------------

- 129 Test

- Test coverage is currently: 92 %

- qunit javascript tests for comments viewlet and bulk moderation view

- jslint and zptlint pass without violations

- pylint still reports (minor) violations


Discussion add-on products
--------------------------

- plone.formwidget.captcha (z3c.form captcha widget)
  http://svn.plone.org/svn/plone/plone.formwidget.captcha/

- plone.formwidget.recaptcha (z3c.form recaptcha widget)
  http://svn.plone.org/svn/plone/plone.formwidget.recaptcha/

- collective.autoresize (jQuery auto-resize for comment-text)
  http://svn.plone.org/svn/collective/collective.autoresizetextarea/

- collective.akismet (for Akismet spam protection)
  http://pypi.python.org/pypi/collective.akismet/
  
- collective.z3cform.norobots (provides a "human" captcha widget based on a list
  of questions/answers)
  http://pypi.python.org/pypi/collective.z3cform.norobots/1.1/


Further ideas
-------------

- RichText comments

- Auto-approve whitelist

- IP blacklist

- Comment pagination

- Migration from other commenting add-ons (qPloneComments,
  iqpp.plone.commenting)

For a complete list of ideas see:
http://www.pivotaltracker.com/projects/15135


Documentation
-------------

There is a Sphinx-based documentation. See: 
http://packages.python.org/plone.app.discussion/


Needed documentation changes
----------------------------

To my knowledge, there is no documentation about the current
commenting system on plone.org.


Backwards compatibility
-----------------------

There is a migration script to migrate comments
("your-site/@@comment-migration").


Credits
-------

 - Timo Stollenwerk
 - Martin Aspeli
 - Jon Stahl
 - David Glick
 - and others

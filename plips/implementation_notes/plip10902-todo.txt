eleddy
======
- adding a new collection, what is allowed users and roles supposed to
  filter on? it doesn't seem to filter on anything
TODO: This filter should allow the end user to create a collection that contains documents on which user 'x' as the View permission.
Portal_catalog checks the View permission for the current user. Maybe we can use unrestrictedSearch if this filter is used.
INFO: unrestrictedSearch breaks security, we will remove the filter for now. Fixed in r50436.


- Once I add a criteria, then try to add another one that is the same, the
  results end up being a little weird. For example, I have description and
  the word "tomato" with three results. then add another description field
  with no words at all and I get 21 results. I would expect these to be
  an intersection, although I could be wrong since there is no indication.
  I think its just a bug though.
XXX: remove index when used, or merge criteria?
INFO: Looked at this, this needs to be fixed in the queryparser, we need
      to 'remember' previous queryvalues and merge them in a 'intelligent'
      dictionary update method


- It would be nice if the query did not submit and filter
  until after the user enters something in the box. I often found myself adding
  a filter and then wanting to see what I had in the live search but it was gone.
  This also makes sense in cases where the filter does not apply to the objects being
  displayed (e.g. event start and end date)
XXX: would be nice.

- Also nice to have is not to delete the contents of a box if I switch to
  another criteria and then decide to come back. This makes sense if I'm
  trying to decide between using title, description, or searchable text for
  example
XXX: would be nice.
INFO: This really depends on the type you select, we can't remember everything
      in the whole widget. Out of scope for now

- More nice to have is that for items where you have no other choices for the
  type of query (e.g Description "is" versus Locations rel/abs choice) I would
  like to see that be text instead of a drop down. This control makes me wonder
  as the end user if I should check for more options each time and the majority
  of the time I don't need to.
XXX: would be nice.
INFO: Agreed, nice to have, for next release.

- when adding the related to field I immediately get an error:

2010-12-17 18:19:42 ERROR Zope.SiteErrorLog 1292638782.460.265875466564 http://localhost:8080/Plone/@@querybuildernumberofresults
Traceback (innermost last):
  Module ZPublisher.Publish, line 127, in publish
  Module ZPublisher.mapply, line 77, in mapply
  Module ZPublisher.Publish, line 47, in call_object
  Module plone.app.querystring.querybuilder, line 52, in number_of_results
  Module plone.app.querystring.querybuilder, line 33, in __call__
  Module plone.app.querystring.querybuilder, line 45, in _makequery
  Module plone.app.querystring.queryparser, line 44, in parseFormquery
AttributeError: 'module' object has no attribute '_referenceIs'
TODO: add parser for referenceIs
INFO: Removed related criteria for now in r50227.

- Plone.app.collection: Need to have README say something
TODO: make readme
INFO: Added README in r50434

- The query field widget could use some better documentation.
TODO: documentation.
INFO: Added documentation, docstrings, comments to
      archetypes.querywidget


rossp
=====
- The GenericSetup profiles need better titles and descriptions so
  that users can know what they're looking at when installing add-ons.
TODO: fix profile titles
INFO: Fixed in r50430 (also in dependency packages)

- The criteria value dropdowns are styled differently than other
  dropdowns.
TODO: fix styling for custom widgets
INFO: This because it's not a normal dropdown, it's a custom html widget.
      The same styling is not possible because that is OS-dependent.
      Faking it would be an option, but I think that will create a lot of
      extra clutter/mess. Currently there is no widget that does 'single-line
      multiselection', we need this to keep all the layout within one row.

- plone.app.collection, plone.app.querystring and
  archetypes.querywidget are in dire need of comments, docstrings and
  more complete interfaces for developer/maintenance documentation
  purposes.  It's far to difficult to approach and understand how
  things fit together as-is.
TODO: create docs + overview image etc
INFO: We've hadded an overview images how the packages depend/linked to
      eachother.(see plone.app.collection > docs > p.a.collection.png)
      Comments, docstrings and such are added to p.a.collection,
      p.a.querystring and archetypes.querywidget. Clutter is removed,
      style changes are applied.


- The javascriptDisabled validator seems distasteful to me, but I
  might not be understanding it.  Why is this necessary and is there
  really no better way?
TODO: explain in docs why this works the way it does.
INFO: This is necessary to create a validation error.
      the validation error is needed to stay in in the current form,
      which keeps archetypes from creating a temp object in portal_factory and
      losing the request. After discussing this with several (ex frameworkteam)
      people, i've implemetented this.
      I've updated the docstrings in the python file.

- I love how small plone.app.collection is.
Me too!
XXX: convert to Dexterity?
INFO: In the future: definitely!

- I don't see any unit tests for the JS.
INFO: There are unit tests in archetypes.querywidget > tests > javascripts
